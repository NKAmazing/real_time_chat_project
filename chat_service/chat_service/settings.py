"""
Django settings for chat_service project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
import datetime
from consulate import Consul
from consulate.models import agent

# Set the project root directory
# PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# django settings module
# SETTINGS_MODULE = config('DJANGO_SETTINGS_MODULE')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = os.getenv('DEBUG')
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'chat',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'rest_framework',
    'rest_framework_simplejwt',
    # 'ConsulService',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'chat_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'frontend/build'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
            ],
        },
    },
]

ASGI_APPLICATION = 'chat_service.asgi.application'

WSGI_APPLICATION = 'chat_service.wsgi.application'

#! Consul configuration CON DJANGO-CONSUL (DEPRECATED)
# CONSUL_AGENT_ADDRESS = config('CONSUL_AGENT_ADDRESS')
# CONSUL_AGENT_PORT = config('CONSUL_AGENT_PORT')
# CONSUL_CHECK_URL = config('CONSUL_CHECK_URL')
# CONSUL_CHECK_INTERVAL = config('CONSUL_CHECK_INTERVAL')
# CONSUL_SERVICE_NAME = config('CONSUL_SERVICE_NAME')
# CONSUL_SERVICE_ADDRESS = config('CONSUL_SERVICE_ADDRESS')
# CONSUL_SERVICE_PORT = config('CONSUL_SERVICE_PORT')

consul_client = Consul(host='172.18.0.2')

#Check service
checks = agent.Check(
    name='Chat Service Check',
    http='http://chat.chat.localhost/health_check/',
    tls_skip_verify=True, #* Para que no verifique el certificado
    interval='10s',
)

# Register service
consul_client.agent.service.register(
    name='chat_service',
    #* service_id='',  Se agrega para que tome las diferentes instancias, ver id unico.
    address='chat_service-chatservice-1', #* Nombre del container
    tags=[  "traefik.enable=true",
            "traefik.consulcatalog.connect=true",
            "traefik.http.routers.chatservice.rule=Host(`chat.chat.localhost`)",# && PathPrefix(`/ws`)"
            "traefik.http.routers.chatservice.tls=true",
            "traefik.http.services.chatservice.loadbalancer.server.port=7000",
            "traefik.http.routers.chatservice.entrypoints=http,https,redis,mysql,wss",
            "traefik.http.services.chatservice.loadbalancer.sticky.cookie=true",
            "traefik.http.middlewares.chatservice-cb.circuitbreaker.expression=ResponseCodeRatio(500, 600, 0, 600) > 0.10 || NetworkErrorRatio() > 0.10 || LatencyAtQuantileMS(50.0) > 100"
            ],
    checks=[checks],
    )

# INFORMATION FOR CONSUL REGISTRATION

# CONSUL_AGENT_ADDRESS Consul agent server's address

# CONSUL_AGENT_PORT Consul agent server's port

# CONSUL_CHECK_URL API on service used by consul server to check it's status

# CONSUL_CHECK_INTERVAL Status check interval

# CONSUL_SERVICE_NAME Local service name

# CONSUL_SERVICE_ADDRESS Local service address

# SERVICE_PORT Local service port


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('DATABASE_NAME'),
        'USER': config('DATABASE_USER'),
        'PASSWORD': config('DATABASE_PASSWORD'),
        'HOST': config('DATABASE_HOST'),
        'PORT': config('DATABASE_PORT'),
    },
}

# Cache and Channels, para el manejo de los sockets
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(config('REDIS_HOST'), config('REDIS_PORT'))],
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ]
}

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


# STATIC_URL = config('STATIC_PATH')
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'frontend/build/static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'